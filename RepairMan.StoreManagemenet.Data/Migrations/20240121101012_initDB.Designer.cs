// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepairMan.StoreManagement.Data;

#nullable disable

namespace RepairMan.StoreManagement.Data.Migrations
{
    [DbContext(typeof(RepairManStoreManagementDbContext))]
    [Migration("20240121101012_initDB")]
    partial class initDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RepairMan.StoreManagement.Domain.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("RepairMan.StoreManagement.Domain.Parts.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QTY")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("RepairMan.StoreManagement.Domain.Parts.PartCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.Property<int?>("PartId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PartId");

                    b.HasIndex("PartId1");

                    b.ToTable("PartCategory");
                });

            modelBuilder.Entity("RepairMan.StoreManagement.Domain.Parts.PartCategory", b =>
                {
                    b.HasOne("RepairMan.StoreManagement.Domain.Categories.Category", "Category")
                        .WithMany("PartCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RepairMan.StoreManagement.Domain.Parts.Part", "Part")
                        .WithMany("Categories")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RepairMan.StoreManagement.Domain.Parts.Part", null)
                        .WithMany("_categories")
                        .HasForeignKey("PartId1");

                    b.Navigation("Category");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("RepairMan.StoreManagement.Domain.Categories.Category", b =>
                {
                    b.Navigation("PartCategories");
                });

            modelBuilder.Entity("RepairMan.StoreManagement.Domain.Parts.Part", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("_categories");
                });
#pragma warning restore 612, 618
        }
    }
}
